// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package kubernetes

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "kubernetes", asset.ModuleFieldsPri, AssetKubernetes); err != nil {
		panic(err)
	}
}

// AssetKubernetes returns asset data.
// This is the base64 encoded gzipped contents of ../metricbeat/module/kubernetes.
func AssetKubernetes() string {
	return "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"
}
