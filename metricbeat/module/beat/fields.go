// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package beat

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "beat", asset.ModuleFieldsPri, AssetBeat); err != nil {
		panic(err)
	}
}

// AssetBeat returns asset data.
// This is the base64 encoded gzipped contents of module/beat.
func AssetBeat() string {
	return "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"
}
